# frozen_string_literal: true

module ActiveBrainz
  class <%= class_name %> < Base
    self.table_name = "<%= table_name %>"
    <%- if primary_key && primary_key != "id" -%>
    self.primary_key = <%= primary_key.respond_to?(:each) ? "%w(#{primary_key.join " "})" : "\"#{primary_key}\"" %>
    <%- end -%>
    <%- if gid? -%>

    include HasGID
    <%- end -%>
    <%- references.each do |ref| -%>
    <%- if ref.type == :has_many -%>

    has_many :<%= ref.name %>,
             class_name: "<%= ref.class_name %>",
             foreign_key: "<%= ref.column %>"
    <%- else -%>

    belongs_to :<%= ref.name %>,
               class_name: "<%= ref.class_name %>",
               foreign_key: "<%= ref.column %>"<%- if ref.null -%>,
               optional: true<%- end %>
    <%- end -%>
    <%- end -%>
    <%- if attributes.any? -%>

    <%- attributes.reject { |a| a.name == "gid" }.each do |attr| -%>
    attribute :<%= attr.name %><% if [:string, :text].exclude?(attr.type) %>, :<%= attr.type %><% end %>
    <%- end -%>
    <%- end -%>
  end
end
